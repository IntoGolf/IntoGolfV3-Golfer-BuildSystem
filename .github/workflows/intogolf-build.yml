name: IntoGolf Multi-Tenant Build
on:
  workflow_dispatch:
    inputs:
      tenant:
        description: 'Tenant to build'
        required: true
        default: 'dev'
      platform:
        description: 'Platform'
        required: true
        default: 'android'
  repository_dispatch:
    types: [build-app]

jobs:
  build-android:
    if: contains(fromJSON('["android", "both"]'), github.event.inputs.platform || github.event.client_payload.platform)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Install dependencies
      run: npm ci

    - name: Get tenant
      id: tenant
      run: |
        TENANT="${{ github.event.inputs.tenant || github.event.client_payload.tenant || 'dev' }}"
        echo "tenant=${TENANT}" >> $GITHUB_OUTPUT
        echo "Building for tenant: ${TENANT}"

    - name: Validate tenant
      run: |
        TENANT="${{ steps.tenant.outputs.tenant }}"
        if [ ! -f "env/.env.${TENANT}" ]; then
          echo "‚ùå Environment file not found: env/.env.${TENANT}"
          echo "Available tenants:"
          ls env/.env.* | sed 's/env\/.env./- /' | grep -v template
          exit 1
        fi
        echo "‚úÖ Environment file found for ${TENANT}"

    - name: Setup secrets (demo)
      run: |
        TENANT="${{ steps.tenant.outputs.tenant }}"
        echo "üîê Setting up secrets for ${TENANT}..."

        # Create .secrets directory
        mkdir -p .secrets

        # For demo purposes, create dummy secrets
        # In production, these would come from GitHub secrets
        cat > .secrets/${TENANT}.env << EOF
        KEY_PASSWORD=demo_password
        KEYSTORE_PASSWORD=demo_password
        KEY_ALIAS=demo_alias
        EOF

        echo "‚úÖ Demo secrets created"

    - name: Test build process
      run: |
        TENANT="${{ steps.tenant.outputs.tenant }}"
        echo "üöÄ Testing build process for ${TENANT}"

        # Load environment
        source "env/.env.${TENANT}"

        echo "üìã Build configuration:"
        echo "   App Name: ${APP_DISPLAY_NAME:-$TENANT}"
        echo "   Package: ${APP_ID:-nl.intogolf.$TENANT}"
        echo "   Version: ${APP_VERSION:-1.0.0}"
        echo "   Android SDK: ${ANDROID_TARGET_SDK:-34}"

        # Test quasar build (dry run)
        echo "üî® Would run: ENVIRONMENT=${TENANT} quasar build"
        echo "‚úÖ Build simulation complete"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: build-info-${{ steps.tenant.outputs.tenant }}
        path: |
          env/.env.${{ steps.tenant.outputs.tenant }}
        retention-days: 7

  build-ios:
    if: contains(fromJSON('["ios", "both"]'), github.event.inputs.platform || github.event.client_payload.platform)
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Get tenant
      id: tenant
      run: |
        TENANT="${{ github.event.inputs.tenant || github.event.client_payload.tenant || 'dev' }}"
        echo "tenant=${TENANT}" >> $GITHUB_OUTPUT
        echo "Building iOS for tenant: ${TENANT}"

    - name: iOS build simulation
      run: |
        TENANT="${{ steps.tenant.outputs.tenant }}"
        echo "üçé iOS build simulation for ${TENANT}"
        echo "‚úÖ iOS build would run here"